addEventListener("message",({data:N})=>{const e=r=>{let a=null;try{const s=r.toString().trim();s.length>0&&(m=+s,a=isNaN(m)?null:m)}catch{a=null}var m;return a},b=N.jsonData,g={},h={},p={};let M=null;try{for(const r of Object.keys(b)){const a=new Array,s=b[r];if("object"!=typeof s||!("disg"in s))continue;const m=s.disg;let t={max_d:Number.MIN_VALUE,max_r:-1e3*Math.PI,min_d:Number.MAX_VALUE,min_r:1e3*Math.PI,max_d_m:"0",max_r_m:"0",min_d_m:"0",min_r_m:"0"};for(const o of Object.keys(m)){const y=o.replace("node","");if(y.includes("n")||y.includes("l"))continue;const l=m[o];let _=e(l.dx),i=e(l.dy),c=e(l.dz),d=e(l.rx),u=e(l.ry),x=e(l.rz);_=null==_?0:1e3*_,i=null==i?0:1e3*i,c=null==c?0:1e3*c,d=null==d?0:1e3*d,u=null==u?0:1e3*u,x=null==x?0:1e3*x,a.push({id:y,dx:_,dy:i,dz:c,rx:d,ry:u,rz:x});for(const n of[_,i,c])t.max_d<n&&(t.max_d=n,t.max_d_m=o),t.min_d>n&&(t.min_d=n,t.min_d_m=o);for(const n of[d,u,x])t.max_r<n&&(t.max_r=n,t.max_r_m=o),t.min_r>n&&(t.min_r=n,t.min_r_m=o)}const f=r.replace("Case","");g[f]=a,h[f]=Math.max(Math.abs(t.max_d),Math.abs(t.min_d)),p[f]=t}}catch(r){M=r}postMessage({disg:g,max_value:h,value_range:p,error:M})});